<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content">
	<channel>
		<title>hawken.is</title>
		<description>My website!</description>
		<link>https://www.hawken.is</link>
		<language>en</language>
		<lastBuildDate>Mon, 25 Jan 2021 04:36:56 +0000</lastBuildDate>
		<pubDate>Mon, 25 Jan 2021 04:36:56 +0000</pubDate>
		<ttl>250</ttl>
		<atom:link href="https://www.hawken.is/feed.rss" rel="self" type="application/rss+xml"/>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2021/cats</guid>
			<title>On Cats</title>
			<description></description>
			<link>https://www.hawken.is/writing/2021/cats</link>
			<pubDate>Sun, 24 Jan 2021 21:08:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>On Cats</h1><blockquote><p>and why they manage to tangle themselves into knots while being fed</p></blockquote><p>Let us reference the following meme:</p><p>./images/cats-feeding-time.jpeg</p><p>First, we have an image of three full food bowls.</p><p>Then, we have an image of a gordion knot of cats[^1] eating from those bowls.</p><p>In my experience, cat feeding time works something like this:</p><ol><li>You pour food into one bowl</li><li>All of the cats start eating from that bowl</li><li>You pour food into the second bowl</li><li>At least one cat abandons the first bowl to attack the second, but they take the most direct path rather than backing up and making a straight shot</li><li>You pour food into the third bowl</li><li>The cat pathfinding algorithm breaks further</li><li>You wind up with the gordion knot of cats</li></ol><p>fin.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/curry-rice</guid>
			<title>Curry</title>
			<description></description>
			<link>https://www.hawken.is/cooking/curry-rice</link>
			<pubDate>Wed, 23 Dec 2020 17:00:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Curry</h1><ul><li><a href="https://www.justonecookbook.com/simple-chicken-curry/">Curry</a></li><li><a href="https://www.justonecookbook.com/how-to-make-curry-roux/">Curry Roux</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/potato-wedges</guid>
			<title>Potato Wedges</title>
			<description></description>
			<link>https://www.hawken.is/cooking/potato-wedges</link>
			<pubDate>Mon, 21 Dec 2020 18:56:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Potato Wedges</h1><p><a href="https://www.theironyou.com/2018/10/salt-pepper-paprika-potato-wedges.html">source</a></p><p>Serves 4 as a side.</p><h2>Ingredients</h2><ul><li>1 lb / 453 grams potatoes, skin on, cut into eighths</li><li>1 teaspoon salt</li><li>½ teaspoon ground black pepper</li><li>½ teaspoon garlic powder</li><li>2 tablespoons olive oil</li><li>Fresh chopped parsley for garnish</li></ul><h2>Directions</h2><ol><li>Preheat oven to 375°F (190°C) and place a rack in the middle.</li><li>Pat potatoes wedges dry with paper towels and place them on a baking sheet.</li><li>Drizzle with oil and season with salt and pepper.</li><li>Toss with your hands until the wedges are evenly coated.</li><li>Roast in the oven for about 35 to 40 minutes (depending on how big the wedges are), flipping halfway through (at about the 20-minute mark.) The potato wedges should be golden brown and crisp.</li><li>Sprinkle with chopped fresh parsley and serve hot.</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/snowball-cookies</guid>
			<title>Snowball Cookies</title>
			<description></description>
			<link>https://www.hawken.is/cooking/snowball-cookies</link>
			<pubDate>Mon, 21 Dec 2020 18:52:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Snowball Cookies</h1><h2>Ingredients</h2><ul><li>2 sticks unsalted butter</li><li>⅓ cup sugar</li><li>Almond flour, a little under 300g</li><li>1 tsp baking powder</li></ul><h2>Instructions</h2><ol><li>Soften butter in microwave</li><li>Add sugar, and mix well</li><li>Add flour and baking powder</li><li>Preheat to 375°F</li><li>Roll up balls of dough, about 1-1.5" across - about 1tsp</li><li>Bake for 13-15 minutes, making sure they don't brown</li><li>Once cooled, sprinkle powdered sugar to decorate</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/kombucha</guid>
			<title>Kombucha</title>
			<description></description>
			<link>https://www.hawken.is/cooking/kombucha</link>
			<pubDate>Wed, 28 Oct 2020 22:01:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Kombucha</h1><ul><li><a href="https://www.thekitchn.com/how-to-make-kombucha-tea-at-home-cooking-lessons-from-the-kitchn-173858">https://www.thekitchn.com/how-to-make-kombucha-tea-at-home-cooking-lessons-from-the-kitchn-173858</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/pumpkin-bread</guid>
			<title>Pumpkin Bread</title>
			<description></description>
			<link>https://www.hawken.is/cooking/pumpkin-bread</link>
			<pubDate>Wed, 28 Oct 2020 22:00:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Pumpkin Bread</h1><ul><li><a href="https://sallysbakingaddiction.com/pumpkin-chocolate-chip-bread/print-recipe/66409/">https://sallysbakingaddiction.com/pumpkin-chocolate-chip-bread/print-recipe/66409/</a></li><li><a href="https://www.allrecipes.com/recipe/22935/pumpkin-puree/">https://www.allrecipes.com/recipe/22935/pumpkin-puree/</a></li><li><a href="https://www.vitamix.com/ca/en_us/recipes/homemade-pumpkin-puree">https://www.vitamix.com/ca/en_us/recipes/homemade-pumpkin-puree</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/rosemary-bread</guid>
			<title>Rosemary Bread</title>
			<description>garlic optional</description>
			<link>https://www.hawken.is/cooking/rosemary-bread</link>
			<pubDate>Mon, 28 Sep 2020 14:28:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Rosemary Bread</h1><p><a href="https://www.allrecipes.com/recipe/214650/super-easy-rosemary-bread-machine-bread/">https://www.allrecipes.com/recipe/214650/super-easy-rosemary-bread-machine-bread/</a></p><h2>Ingredients</h2><ul><li>1 cup warm water (110°F / 43°C)</li><li>2 ½ teaspoons active dry yeast</li><li>3 tablespoons white sugar</li><li>1 ½ teaspoons salt</li><li>3 tablespoons olive oil</li><li>½ teaspoon ground thyme</li><li>2 teaspoons crushed dried rosemary</li><li>3 cups all-purpose flour</li></ul><h2>Steps</h2><p>Pour the water into the pan of a bread machine, then sprinkle in the yeast and sugar.</p><p>Let the mixture sit in the bread machine until a creamy foam forms on top of the water, about 10 minutes.</p><p>Sprinkle in the salt, then add olive oil, thyme, rosemary, and flour.</p><p>Set the machine for light crust setting, and start the machine.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/chocolate-chip-blueberry-muffins</guid>
			<title>Blueberry Chocolate Chip Muffins</title>
			<description></description>
			<link>https://www.hawken.is/cooking/chocolate-chip-blueberry-muffins</link>
			<pubDate>Sun, 13 Sep 2020 13:15:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Blueberry Chocolate Chip Muffins</h1><blockquote><p>Homemade soft fluffy muffins made with fresh blueberries and chocolate chips. Bake them for breakfast or dessert, a summer favorite.</p></blockquote><p>Source: <a href="https://gatherforbread.com/blueberry-chocolate-chip-muffins/">https://gatherforbread.com/blueberry-chocolate-chip-muffins/</a></p><h2>Ingredients</h2><ul><li>Butter, Softened | ½ cup (aka 8 tbsp, aka 1 stick) |</li><li>Granulated Sugar | ¾ cup |</li><li>Baking Powder | 2 teaspoons |</li><li>Salt | ½ teaspoon |</li><li>Vanilla extract | 1 teaspoon |</li><li>Eggs | 2, large |</li><li>Milk | ½ cup |</li><li>all-purpose or white whole wheat flour | 2 cups |</li><li>Chocolate Chips | 1 cup |</li><li>Blueberries | 1 cup | Frozen</li><li>Flour | 2 teaspoons |</li></ul><h2>Instructions</h2><p>Preheat the oven to 425°F.</p><p>Lightly grease a standard-size muffin pan or line with muffin cups and spray the muffin cups with cooking spray.</p><p>Beat together the butter and sugar until fluffy.</p><p>Beat in the eggs.</p><p>Stir in the milk and vanilla just until combined.</p><p>Scrape down the bowl.</p><p>In a small bowl combine the flour, baking powder, and salt.</p><p>Add to the creamed mixture and mix until fully combined. Do not over mix.</p><p>Stir in the chocolate chips.</p><p>Add the blueberries with the flour to help the blueberries not to sink while baking.</p><p>Scoop the batter into the muffin cups to close to full.</p><p>Bake muffins for about 5 minutes.</p><p>Lower oven temperature to 350.</p><p>Continue to bake 12 to 15 minutes or until a toothpick inserted into the center of one comes out clean.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/eggs</guid>
			<title>Hard-Boiled Eggs</title>
			<description></description>
			<link>https://www.hawken.is/cooking/eggs</link>
			<pubDate>Tue, 25 Aug 2020 19:22:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Hard-Boiled Eggs</h1><p><a href="https://www.allrecipes.com/article/how-to-boil-an-egg/">https://www.allrecipes.com/article/how-to-boil-an-egg/</a></p><ol><li>Place eggs in a saucepan or pot and cover with cold water.</li></ol><ol start="2"><li>Put pan over high heat and bring water to a rolling boil. Remove pan from heat and cover.</li></ol><blockquote><p>How long does it take to boil an egg? Well, actually, you want the water to come just to a boil but not stay there.</p></blockquote><ol start="3"><li>Let the eggs stand in the hot water for 14-17 minutes.</li></ol><ol start="4"><li>Drain eggs and put in a bowl filled with ice water.</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/five-course-picnic</guid>
			<title>Items used for a five-course picnic</title>
			<description></description>
			<link>https://www.hawken.is/cooking/five-course-picnic</link>
			<pubDate>Tue, 7 Jul 2020 17:47:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Items used for a five-course picnic</h1><p>Work in progress.</p><h2>Lemon Chicken Piccata</h2><p>Source: <a href="https://www.thechunkychef.com/easy-lemon-chicken-piccata/">https://www.thechunkychef.com/easy-lemon-chicken-piccata/</a></p><h3>INGREDIENTS</h3><ul><li>4 boneless skinless chicken breasts, pounded to 3/4 - 1" thickness)</li><li>salt and pepper to taste</li><li>Pinch of ground thyme</li><li>1 Tbsp fresh basil chopped</li><li>1/2 cup flour</li><li>2 Tbsp butter</li><li>2 Tbsp olive oil</li><li>1/2 cup chicken broth</li><li>1/2 cup dry white wine</li><li>1/3 cup pure lemon juice</li><li>1/4 cup capers, drained</li><li>Fresh parsley and basil for garnish</li><li>1 lb thin spaghetti pasta</li></ul><h3>INSTRUCTIONS</h3><ol><li>Heat butter and oil in a skillet over medium high heat. Season flour with salt, pepper and chopped fresh basil. Add thyme, salt and pepper to each side of the chicken breasts, then dredge in the seasoned flour.</li><li>Place the chicken breasts in the skillet. Cook in batches of 2 (unless you have a huge skillet) to ensure a golden brown exterior. Cook for about 4 minutes on each side, or until chicken is completely cooked through. Remove chicken to a plate and set aside. Repeat with remaining chicken breasts.</li><li>Drop your pasta in salted boiling water and cook until al dente (according to package directions).</li><li>Reduce the heat to medium low. Add stock, wine, lemon juice, heavy cream, and capers to the same skillet. Whisk to combine and bring the sauce to a low boil. Taste the sauce and adjust salt and pepper if necessary. Simmer the sauce for 3 minutes.</li><li>Drain pasta, place in a bowl, drizzle with olive oil and add fresh basil and parsley, and toss to combine.</li><li>Slice the chicken into strips and place over cooked pasta. Pour sauce over the top and garnish with chopped parsley and basil.</li></ol><h2>Croutons</h2><p>Source: <a href="https://anaffairfromtheheart.com/homemade-croutons-from-leftover-bread/">https://anaffairfromtheheart.com/homemade-croutons-from-leftover-bread/</a></p><h3>Ingredients</h3><ul><li>8 cups cubes leftover bread, crusts on</li><li>2 teaspoons minced garlic</li><li>2 teaspoons Italian Seasoning Blend</li><li>1/4 cup melted butter</li><li>Butter for pan prep</li><li>Sea salt optional</li></ul><h3>Instructions</h3><ol><li>Preheat oven to 375 degrees. Spritz a cookie sheet with spray butter, or rub with a stick of butter to coat.</li><li>Cut slices of bread into the size of croutons you desire. I left the crusts on.</li><li>Lay bread on prepared cookie sheet in a single layer.</li><li>Melt butter and whisk in Italian seasoning and garlic. Drizzle over the top of the bread.</li><li>Bake for 5 minutes, turn bread over. Continue this method every 5 minutes until bread is toasted to your desired crispness. I like mine golden brown on the outside and still soft in the middle. Mine took just under 20 minutes. Watch them closely.</li><li>Sprinkle with sea salt, if desired) when you remove them from the oven. Let cool. Store in an air tight container. Use within one week.</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/mario-party</guid>
			<title>Mario Party</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/mario-party</link>
			<pubDate>Sun, 5 Jul 2020 21:30:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Mario Party</h1><p>… on Mac, via Dolphin, with two local players and with one multiplayer over the internet, shown on a TV.</p><p>So! Let's get started, shall we?</p><p>I am using <a href="https://dolphin-emu.org">Dolphin</a>, version <code>5.0-12247</code>, on macOS 10.15.4, on a Retina MacBook Pro 2012 with the discrete NVIDIA GeForce GT 650M graphics card.</p><ol><li>Download Dolphin</li><li>Get an ISO for the game you want to play, by extracting it from a physical copy of the game that you own</li><li>Open Dolphin's "Graphics" settings, from the Options menu, and change "Backend" to "Vulkan" (this appears to be a Vulkan-to-Metal translator). I let it use my NVIDIA card, but the integrated Intel card might work as well.</li><li>I left all of the Enhancements at their default settings</li><li>New with Dolphin 5.0-12247, you can convert the ISOs into "rvz" files, via "Convert file" in the context menu. (Smaller on disk, they are.)</li></ol><p>I connected two controllers to my Mac: a Switch Pro Controller, and an off-brand Switch GameCube controller. To connect these to your Mac, open Bluetooth preferences (and make sure Bluetooth is turned on!), then press and hold the little Connect dot on the controller. Then you can connect it to your Mac!</p><p>Once you've got the controllers connected, switch back to Dolphin. Open the Controllers settings, set Port 1 to Standard Controller, and hit Configure.</p><p>From the Device menu on the top left, pick the controller that you want to configure. I looked for the keywords "Pro Controller" to find my pro controller, and the other thing that said "Controller" I deemed to be the GameCube controller.</p><p>I then mapped each of my buttons, as appropriate, and I calibrated the joysticks.</p><p>I don't understand what <code>L-Analog</code> and <code>R-Analog</code> are, or how they differ from <code>L</code> and <code>R</code>, but I set L/R to L/R, and L/R-Analog to Z-L/Z-R.</p><p>I then "save"d these settings as "Pro Controller", and similarly set up the GameCube controller as "GameCube Controller".</p><p>If you want multiple local players, you can select multiple controller port as Standard Controller in the controller settings, and the game will detect them as controllers that are plugged into the console.</p><p>Dolphin has a Tools → Netplay option, which I intend to use, but I have not yet tried.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/work-log-2020-07-03</guid>
			<title>Work Log, 2020-07-03</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/work-log-2020-07-03</link>
			<pubDate>Fri, 3 Jul 2020 12:00:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Work Log, 2020-07-03</h1><ol><li>Fixed some bugs in the New Student Orientation checklist, <a href="https://www.stolaf.edu/deposited">https://www.stolaf.edu/deposited</a></li></ol><ol start="2"><li>Finished first version of application for students to upload OleCard photos (pending approval by staff)</li></ol><ol start="3"><li>Finished Writing placement survey for incoming students, and updated /deposited to reflect if students are expected to take the survey</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/work-log-2020-07-02</guid>
			<title>Work Log, 2020-07-02</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/work-log-2020-07-02</link>
			<pubDate>Thu, 2 Jul 2020 16:38:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Work Log, 2020-07-02</h1><ol><li>Began migrating SIS to its own dedicated server VM</li></ol><ol start="2"><li>Began work on application for students to upload OleCard photos (pending approval by staff)</li></ol><ol start="3"><li>Participated in TFCSR meeting number 3</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/work-log-2020-07-01</guid>
			<title>Work Log, 2020-07-01</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/work-log-2020-07-01</link>
			<pubDate>Wed, 1 Jul 2020 18:38:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Work Log, 2020-07-01</h1><ol><li>I can't spell "ineligible". There's only one L after the first E. Not two. Nope.</li></ol><ol start="2"><li>You can now see prerequisites listed in the dialog for "you haven't met the prerequisites".</li></ol><ol start="3"><li>The "ineligible" dialog tells you why you're ineligible.</li></ol><ol start="4"><li>Hid IS/IR and internship courses by default. Because you can't register for them in here anyway, and they're essentially just clutter.</li></ol><ol start="5"><li>Added a checkbox for hiding courses with prerequisites that you haven't met.</li></ol><ol start="6"><li>Fixed a few bugs around class year course capacities and variable-credit courses.</li></ol><ol start="7"><li>Prevented you from dropping courses you were auto-registered for, like a conversations program.</li></ol><ol start="8"><li>Fixed blurry text in the dialog on Chrome/Windows (removed a <code>transform: translate()</code>???)</li></ol><ol start="9"><li>The "Course Full (Class Year)" message now reads "Not Open To Class Of 2024". Or "Not Open To Class Of None." Whichever works :-)</li></ol><p>That's the log of work for today!</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/bank-transfers</guid>
			<title>On Bank Transfers…</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/bank-transfers</link>
			<pubDate>Wed, 1 Jul 2020 18:35:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>On Bank Transfers…</h1><p>Make sure that youve got the correct accounts picked as the "from" and "to" account.</p><p>I accidentally transferred money <em>out</em> of one today, when I meant to put money <em>in</em>. And ACH transfers can't be cancelled (easily, at least…) sooooo</p><p>Anyway it should all work out, but it's a sobering reminder to actually check the things labeled "from" and "to".</p><p>Simple did everything they could. <strong>I</strong> was the problem. PEBCAK and all that.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/warm-chocolate</guid>
			<title>Warm Chocolate</title>
			<description></description>
			<link>https://www.hawken.is/cooking/warm-chocolate</link>
			<pubDate>Tue, 30 Jun 2020 21:12:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Warm Chocolate</h1><h2>Version 1</h2><ol><li>Take some butter</li><li>Warm it up (do not melt!)</li><li>Put some chocolate chips in a bowl</li><li>Microwave the chocolate chips for at least 26 seconds</li><li>Add some brown sugar</li><li>Add two slivers of butter</li><li>Mix until well-mixed</li></ol><p>Enjoy!</p><h2>Version 2</h2><ul><li>¼ cup chocolate chips</li><li>½ tbsp hand-softened butter</li><li>1 tsp brown sugar</li></ul><p>Warm the stick of butter in your hands until soft.</p><p>While you do that, melt the chocolate chips in the microwave for about 30s.</p><p>Mix the chocolate chips, brown sugar, and butter in a bowl.</p><p>Enjoy!</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/couch</guid>
			<title>The Couch</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/couch</link>
			<pubDate>Tue, 23 Jun 2020 20:49:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>The Couch</h1><p>"I think this goes here… and maybe this goes here? Oh and if I just sit here, this will slot in properly."</p><hr><p>This instruction manual did not get proofread properly.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/strawberries</guid>
			<title>Strawberries</title>
			<description></description>
			<link>https://www.hawken.is/cooking/strawberries</link>
			<pubDate>Sun, 21 Jun 2020 12:38:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Strawberries</h1><p><a href="https://www.onceuponachef.com/recipes/strawberry-muffins.html">https://www.onceuponachef.com/recipes/strawberry-muffins.html</a></p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/making/soap</guid>
			<title>Soaps</title>
			<description></description>
			<link>https://www.hawken.is/making/soap</link>
			<pubDate>Sat, 20 Jun 2020 18:27:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Soaps</h1><ul><li><a href="https://www.brambleberry.com/articles/tips-and-tricks/art0005-beginners-guide-to-melt-and-pour.html">https://www.brambleberry.com/articles/tips-and-tricks/art0005-beginners-guide-to-melt-and-pour.html</a></li><li><a href="https://www.goodhousekeeping.com/home/cleaning/a20705805/how-to-make-homemade-soap/">https://www.goodhousekeeping.com/home/cleaning/a20705805/how-to-make-homemade-soap/</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/brautwurst</guid>
			<title>Bratwurst</title>
			<description></description>
			<link>https://www.hawken.is/cooking/brautwurst</link>
			<pubDate>Fri, 19 Jun 2020 19:52:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Bratwurst</h1><ul><li><a href="http://www.pattycakespantry.com/dinner/roasted-bratwurst-and-potatoes/">http://www.pattycakespantry.com/dinner/roasted-bratwurst-and-potatoes/</a></li></ul><ul><li><a href="https://smokerestaurant.com/how-to-cook-brats-in-the-oven/">https://smokerestaurant.com/how-to-cook-brats-in-the-oven/</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/sql-optimizations-1</guid>
			<title>SQL optimizations in SIS</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/sql-optimizations-1</link>
			<pubDate>Mon, 15 Jun 2020 18:58:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>SQL optimizations in SIS</h1><blockquote><p>This document is derived from an email I wrote today.</p></blockquote><p>I've been optimizing the number of queries on the SIS course registration page.</p><p>Currently, we make one giant query for all of the "matching" classes, with an extra row for each faculty member who teaches the class. So, a course with two sections, each with two instructors, would return four rows from <code>fetch_matching_courses</code>.</p><p>The rows are deduplicated by a <code>&lt;cfoutput query="fetch_matching_courses" group="CLBID"&gt;</code> construct, which ignores the instructors and outputs one row per CLBID. That's OK.</p><p>Within each matching class, there are several pieces of information that are bound to multiple other rows in the database:</p><ul><li>Instructors (as detailed above)</li><li>Notes</li><li>Prerequisites</li><li>Meeting Rooms/Times</li><li>GE Requirements</li><li>Associated lab/discussion courses</li></ul><p>For each of those, except for the instructors, we currently make an extra query back to the database to fetch the matching items.</p><p>In system design, there's a topic called "N + 1 Queries" – feel free to skip this section if you know of it; I'm just writing down a bunch of disjointed thoughts here – which is considered to be a suboptimal design for querying things. This is due to the inherent network overhead of querying an out-of-process database (SQLite is an exception, as it's bundled into the process that calls it). The N + 1 query problem is when, for each row in your result set, you request more data from the database. For example, a set of articles, and then you might request the tags for each article:</p><pre><code class="language-cfml">&lt;cfquery name="articles"&gt;
SELECT article_id, title FROM articles WHERE published &gt; now() - '1 week'
&lt;/cfquery&gt;

&lt;cfoutput query="articles"&gt;
  &lt;cfquery name="tags"&gt;
    SELECT tag_id, name FROM article_tags WHERE article_id = &lt;cfqueryparam value="#articles.article_id#"&gt;
  &lt;/cfquery&gt;
&lt;/cfoutput&gt;
</code></pre><p>If we assume even a 1ms network overhead for talking to the database, then that's … 1, 2, 3, 4, 5+ queries per output row, which if someone searches for a 100-class result list – maybe, say, all WRI courses – then that's at least 100ms spent doing nothing but waiting for the network to talk to INEZ.</p><p>Now, we do also have to factor in the ColdFusion cached queries, since we use those a fair amount. I still want to check in on how many queries we allow to be cached, and, like, the cache hit ratio on them? But I think we can safely assume that <em>most</em> searches won't have all 5 queries hit the database. However, the first ones will, probably every morning, since we only cache these results for 6 hours.</p><p>So. All that is to say, I've been working on ways to reduce the number of queries performed within the output loop.</p><p>I don't want to mimic what we do for instructors – as nice as that is, to do a Query-of-Queries for each type of data, I believe that once we add in GEs, and notes, and meeting rooms, we'd be producing something like 20 times the number of rows we actually want, and I don't think that INEZ would be especially happy about that.</p><p>So I've been experimenting with a few different approaches.</p><h2>For GE requirements:</h2><ol><li>Perform a listagg of the GEreqs on the course query, to produce a delimited list like <code>WRI,FOL-N</code></li><li>Find all of the GE reqs, then store them in a lookup table of [GECODE: PDF url]</li><li>For each course, <code>&lt;cfloop list&gt;</code> over that delimited list, then look up the URL in the lookup table.</li></ol><p>That's one extra query, total, which can be cached easily, and some struct lookups.</p><h2>For instructors:</h2><p>I think I want to do something similar: listagg the PPNUMs, then look up all active instructors, then <code>&lt;cfloop&gt;</code> and do a struct lookup.</p><h2>For meeting times and course notes:</h2><p>And maybe I should do the same approach – look up and cache the list of all meeting times for the current term, paying the cost of a big query exactly once per 6 hours, then store them in a lookup table (or do a QoQ?) and look them up by meeting-ID.</p><p>Same for notes.</p><p>I was experimenting with doing an "all notes" query, with CLBIDs, but I realized that (a) that'd be a bunch of different query plans on the db2 side[^1], and (b) it wouldn't cache very well, because each query would result in different CLBIDs being passed in (especially since we exclude registered CLBIDs from the search results).</p><p>I think I want to experiment with what I proposed above, now that I've reflected on it some more.</p><h2>For associated courses:</h2><p>For each associated course…</p><ul><li>We call helper-check-time-conflict for each (registered, associated) CLBID pair, and again for the (parent, associated) pair [to prevent class and assoc. lab time conflicts]. helper-check-time-conflict makes two queries, one for each CLBID passed in, which are cached for 6 hours, and then checks for time conflicts with some CFML logic.</li></ul><ul><li>Then we query for the meeting times, and we do a QoQ on <code>fetch_matching_courses</code> to find the instructors.</li></ul><p>… and we build up the set of <code>&lt;option&gt;</code> tags that get shown to the student.</p><p>So that's N * M + N queries, in the worst case, for each parent course with associated courses, where N is the number of associates, and M is the number of registered courses on the student. However, once a given course has been looked up, this data is cached.</p><p>But, there's also the uncached query that looks up the list of associated courses, and I don't think that we can cache it, because we need to check class size limits.</p><p>My best idea for reducing the number of queries here is to change <code>required_other_course_info</code> to be a Query-of-Queries, which I think is plausible; it's selecting the same columns that <code>fetch_matching_courses</code> does, and it's really looking for a subset of the matched courses, currently. Alternately, it should be feasible to do a single large query at the outset, right after <code>fetch_matching_courses</code>, which selects the associated courses for anything found by <code>fetch_matching_courses</code>, and then QoQ that query instead. Experimentation needed!</p><p>And that leaves us with…</p><h2>Prerequisites</h2><p>Each course calls helper-check-prereqs, which does at least one lookup (to fetch the applicable rules, if any). I have now started caching this query, and the other queries that just look at RCREQT/RCRULS, for 6 hours each.</p><p>helper-check-prereqs queries for additional rules, then calls helper-evaluate-rule for each rule that it finds. (This can be a recursive set of calls, unfortunately.)</p><p>helper-evaluate-rule starts off with a query, to look up what the requirement are actually wants. Each potential column results in additional queries being run, to look up things like "has the student taken this course" or "is the student declared with this major", and so on.</p><p>I edited this file today to add the "cachedafter" attribute to these data lookups. When helper-evaluate-rule is first called, it sets a REQUEST-scoped variable called <code>REQUEST.prereqs_cachedafter</code> to the current timestamp. What I'm doing here is to allow any future queries against this information <em>in this request</em> to use the cached data, but to avoid any subsequent queries from seeing stale information. This unfortunately doesn't avoid issues with concurrent requests (from the same student) re-using the cached data, but I don't think we can really do anything about that at this time.</p><p>According to <a href="https://www.coldfusionmuse.com/index.cfm/2008/3/18/cachedafter">cursory internet searches</a>, ColdFusion will automatically discard the old cached information when I change the <code>cachedafter</code> parameter, so it won't re-use stale data between requests.</p><p>By doing this data caching, I dropped the time taken to evaluate ART 350 (which has 370 possible rules) from ~2s to ~0.1s.</p><hr><p>So! That's what's been on my mind over the weekend and for the past few days. I hope that this mostly-unfiltered blog post is helpful in some way!</p><p>I suppose the summary is, I am working to reduce the number of database queries we perform per row of the course search results from 5+ queries to approx. 1 query per row, if that; ideally, 0 extra INEZ queries per row.</p><p>I also want to remove the duplicate-row-per-faculty issue from the main query, but that's tangential to the primary goal here, unless our IBM guy identifies it as actually being an issue.</p><hr><p>Update 1: I have successfully replaced the instructor QoQ lookup (the one that generated duplicate rows) with QoQ lookup from a "give me all the instructors who taught something in 2020-3" query. Seems about the same speed, but I have high hopes that it will scale to notes and times, too.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/researching/banking</guid>
			<title>A history of interest rates at some banks</title>
			<description></description>
			<link>https://www.hawken.is/researching/banking</link>
			<pubDate>Mon, 15 Jun 2020 02:32:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>A history of interest rates at some banks</h1><h2>Personal Capital Cash</h2><ol><li>1.05% (2020-03-04)</li><li>0.05% (2020-03-17)</li></ol><h2>Credit Karma Savings</h2><ol><li>1.30% (2020-03-05)</li><li>0.56% (2020-03-18)</li><li>0.52% (2020-06-18)</li><li>0.44% (2020-09-01)</li></ol><h2>Simple</h2><ol><li>2.02%</li><li>1.75% (2019-12-17)</li><li>1.55% (2020-04-02)</li><li>1.40% (2020-05-05)</li><li>1.20% (2020-06-02)</li><li>1.00% (2020-07-01)</li><li>0.80% (2020-08-25)</li><li>0.60% (2020-10-08)</li><li>0.50% (2020-12-10)</li></ol><h2>Ally</h2><ol><li>1.60% (2019-12-20)</li><li>1.50% (2020-03-13)</li><li>1.25% (2020-05-11)</li><li>1.10% (2020-06-12)</li><li>1.00% (2020-07-08)</li><li>0.80% (2020-08-14)</li><li>0.60% (2020-09-25)</li><li>0.50% (2020-12-10)</li></ol>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/float-overhead</guid>
			<title>Python floats</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/float-overhead</link>
			<pubDate>Sun, 14 Jun 2020 03:23:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Python floats</h1><p>tonight in Degreepath… I reduced the amount of memory needed, by removing the list of duration floats that it was using to compute the average loop duration. (no, I don't know why I was doing this.)</p><p>a python float = 24 bytes in bits =&gt; 192 bits iters = 1,200,000,000</p><p>(float * iters) in GB =&gt; 28.8 GB</p><p>that's right, for a 1.2 billion loop audit, we're using 28+ gigabytes of RAM, just to store the audit loop durations.</p><p>da4c35c6 should reduce that overhead to, oh, about 24 bytes.</p><hr><p>I was like, why do I have a memory leak</p><hr><p>and I was chatting with nolan and realized, oh, I'm storing a float per loop iteration, I wonder how big those are</p><hr><blockquote><p><a href="https://github.com/degreepath/auditor/commit/da4c35c665a7b3c881c3978f2954d0381ea48e25">da4c35c6</a> should reduce that overhead to, oh, about 24 bytes.</p></blockquote><hr><p>"In CPython, every object begins with a reference count (of type ssize_t, i.e. a machine word) and a pointer to the type object for that object, which is necessary to be able to do any operations (e.g. invoke a method) on the object. That's two machine words right there off the bat, before you even start to talk about the data contained in the object. After that header comes a variable amount of data; in the case of a float object, it's just a C double value directly, so another eight bytes. For a 32 bit CPython, that's 4 + 4 + 8 = 16 bytes, for a 64 bit CPython, that's 8 + 8 + 8 = 24 bytes. Note that CPython can also be configured for debug builds, which adds two more pointers to that common header shared by all objects, which are used to form a doubly linked list of all objects on the heap, which can be used to track down reference counting bugs."</p><hr><p>In short, instead of storing [dur, dur, dur] and averaging that list, I just … recompute (now - start) / count each time I need it</p><hr><p>which is also fewer operations, because it's only needed for progress messages (default every 1,000 iters) and the final output</p><p>And we’ve already shown that 1.2 billion floats is 28.8GB…</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/chicken</guid>
			<title>Oven-Baked Chicken</title>
			<description></description>
			<link>https://www.hawken.is/cooking/chicken</link>
			<pubDate>Sun, 14 Jun 2020 03:07:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Oven-Baked Chicken</h1><p><a href="https://iwashyoudry.com/oven-baked-chicken-breast-recipe/">https://iwashyoudry.com/oven-baked-chicken-breast-recipe/</a></p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/researching/police</guid>
			<title>Police</title>
			<description></description>
			<link>https://www.hawken.is/researching/police</link>
			<pubDate>Sun, 14 Jun 2020 02:45:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Police</h1><ul><li><a href="https://www.mpd150.com/">https://www.mpd150.com/</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/learning/massage</guid>
			<title>Massage</title>
			<description></description>
			<link>https://www.hawken.is/learning/massage</link>
			<pubDate>Sat, 13 Jun 2020 16:21:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Massage</h1><ul><li><a href="https://www.easyvigour.net.nz/backpain/h_BackMassage.htm">back massage</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/bacon</guid>
			<title>How To Make Perfect Bacon in the Oven</title>
			<description>bacon? 🥓</description>
			<link>https://www.hawken.is/cooking/bacon</link>
			<pubDate>Sat, 13 Jun 2020 13:37:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>How To Make Perfect Bacon in the Oven</h1><p>Source: <a href="https://www.thekitchn.com/how-to-cook-perfect-bacon-in-the-oven-cooking-lessons-from-the-kitchn-107970">https://www.thekitchn.com/how-to-cook-perfect-bacon-in-the-oven-cooking-lessons-from-the-kitchn-107970</a></p><h2>Notes</h2><h3>How Much Bacon Can I Cook at Once?</h3><p>I find that one pound of medium-thick bacon fits on a single large baking sheet, like our favorite sheet pan. To cook even more (or if your bacon doesn’t all fit on one sheet), you can cook two baking sheets at once.</p><h3>Do I Have to Flip the Bacon?</h3><p>Nope! You don’t have to flip it while cooking. It’s just so easy -- there’s no flipping or monitoring involved. You just lay the bacon on a baking sheet, stick it in the oven, and set a timer. The strips of bacon bubble away in the oven (no splattering!) and gradually become the crispy, golden-hued, irresistible bacon we know and love.</p><h3>How Do I Make the Bacon Extra-Crispy?</h3><p>Bacon cooked in the oven definitely gets crispy, but I also find that it retains a bit of chewiness near the middle, especially when cooking thick-cut bacon. I love this, but if you love your bacon crispy through and through, then you should try baking it on top of a set over the baking sheet. Lifting the bacon up lets it cook from all sides and get even crispier. Just make sure to use an oven-safe cooling rack for baking bacon. This one below is one of our favorites: very sturdy, and a total steal!</p><h2>Ingredients</h2><p>1 to 2 pounds sliced bacon</p><h2>Instructions</h2><p>Preheat the oven to 400°F. Arrange a rack in the lower third of the oven and heat to 400°F. If you're cooking 2 sheets of bacon, position a second rack in the top third of the oven.</p><p>Arrange the bacon on a baking sheet. Line 1 to 2 rimmed baking sheets with aluminum foil (this makes cleanup easier). Lay the bacon on the baking sheet(s) in a single layer. The bacon can be close together, but don't let it overlap or the bacon will stick during cooking.</p><p>Bake the bacon. Bake until the bacon is deep golden-brown and crispy, 15 to 20 minutes. Exact baking time will depend on the thickness of the bacon and how crispy you like it. Begin checking around 12 minutes to monitor how quickly the bacon is cooking. The bacon fat will sputter and bubble as the bacon cooks, but shouldn't splatter the way it does on the stove top. Pour off the bacon grease as needed so the bacon isn't totally submerged in grease.</p><p>Transfer the bacon to a plate lined with paper towels. Remove the bacon from the oven and use tongs to transfer it to a plate lined with paper towels to drain and finish crisping. Serve immediately.</p><p>Clean up. If you want to save the bacon grease, let it cool slightly, then pour it into a container and refrigerate. If you don't want to save the grease, let it solidify on the baking sheet, then crumple the foil around it and discard.</p><h2>Recipe Notes</h2><p>For even crispier bacon, fit a metal rack over the foil-lined baking sheet and lay the raw bacon on the rack. Elevating the bacon allows it to cook from all sides and become extra-crispy.</p><p>Storage: Refrigerate leftover bacon for 1 week or freeze it for up to 3 months; warm the bacon in the microwave before serving.</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/course-registration-references</guid>
			<title>References for Course Registration work</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/course-registration-references</link>
			<pubDate>Fri, 12 Jun 2020 22:05:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>References for Course Registration work</h1><ul><li><a href="https://helpcenter.uw.edu/myplan-updates-tiramisu-release/">https://helpcenter.uw.edu/myplan-updates-tiramisu-release/</a></li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/listening/medieval-hardcore-party-mix</guid>
			<title>Medieval “Hardcore” Party Mix</title>
			<description></description>
			<link>https://www.hawken.is/listening/medieval-hardcore-party-mix</link>
			<pubDate>Fri, 12 Jun 2020 21:20:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Medieval “Hardcore” Party Mix</h1><a href="https://www.youtube.com/watch?v=xaRNvJLKP1E">YouTube Link</a><p>This is … a <em>banger</em>, somehow, and the comments rock too. PLus, if you come back to this video every few months, the comments have changed, so it's like you get to experience them all over again!</p><p>Found by ln</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/reading/books</guid>
			<title>Books</title>
			<description></description>
			<link>https://www.hawken.is/reading/books</link>
			<pubDate>Fri, 12 Jun 2020 21:17:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Books</h1>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/reading/fanfiction</guid>
			<title>Fanfiction</title>
			<description></description>
			<link>https://www.hawken.is/reading/fanfiction</link>
			<pubDate>Fri, 12 Jun 2020 21:17:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Fanfiction</h1>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/reading/pdfs</guid>
			<title>PDFs to read</title>
			<description></description>
			<link>https://www.hawken.is/reading/pdfs</link>
			<pubDate>Fri, 12 Jun 2020 21:17:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>PDFs to read</h1><ul><li>The Origins of Objective-C at PPI/Stepstone and Its Evolution at NeXT, https://dl.acm.org/doi/pdf/10.1145/3386332</li><li>The LISP 2 Project, https://ieeexplore.ieee.org/ielx7/85/8267588/08267589.pdf?tp=&amp;arnumber=8267589&amp;isnumber=8267588&amp;ref=</li><li>The Evolution of Smalltalk: From Smalltalk-72 through Squeak historical programming, https://dl.acm.org/doi/pdf/10.1145/3386335 (<a href="https://lobste.rs/s/pcgpqe/evolution_smalltalk_from_smalltalk_72">lobste.rs</a>)<ul><li>Dan Ingalls demonstrating smalltalk: https://www.youtube.com/watch?v=uknEhXyZgsg</li><li>When a file isn't a file: analyzing Apple applications, http://research.cs.wisc.edu/adsl/Publications/ibench-sosp11.pdf</li></ul></li></ul><p>books to buy:</p><ul><li>https://m.barnesandnoble.com/w/tools-for-thought-howard-rheingold/1103854540?ean=9780262681155</li></ul><p>recursive sql queries:</p><ul><li>https://towardsdatascience.com/recursive-sql-queries-with-postgresql-87e2a453f1b</li></ul><p>featured:</p><ul><li>https://blog.jessfraz.com/post/size-matters/</li></ul><p>investigating:</p><ul><li>https://github.com/EmilHernvall/dnsguide/blob/master/chapter1.md</li><li>https://perso.telecom-paristech.fr/pautet/Ada95/chap03.htm</li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/reading/smalltalk</guid>
			<title>On Smalltalk</title>
			<description></description>
			<link>https://www.hawken.is/reading/smalltalk</link>
			<pubDate>Fri, 12 Jun 2020 21:17:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>On Smalltalk</h1><ul><li>https://blog.metaobject.com/2020/06/the-curious-case-of-swift-adoption-of.html?m=1</li></ul>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/reading/unlock-software-freedom</guid>
			<title>Unlock Software Freedom #1 (by using better tools)</title>
			<description></description>
			<link>https://www.hawken.is/reading/unlock-software-freedom</link>
			<pubDate>Fri, 12 Jun 2020 21:17:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Unlock Software Freedom #1 (by using better tools)</h1><p><a href="http://blog.williammanley.net/2020/05/25/unlock-software-freedom-one-by-using-better-tools.html">http://blog.williammanley.net/2020/05/25/unlock-software-freedom-one-by-using-better-tools.html</a></p><blockquote><p>An idea that I’ve had burrowing into my mind for quite a few years now is that free software distros are held back by the crap build tools that are used to build software - but the lack of availability of better tools isn’t the cause of the problem.</p></blockquote>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/cooking/tootin-machine</guid>
			<title>Tootin' Machine</title>
			<description>blueberries or strawberries, banana, cashew, beans, mushrooms, lettuce, some spinach, pure cherry juice…</description>
			<link>https://www.hawken.is/cooking/tootin-machine</link>
			<pubDate>Fri, 12 Jun 2020 20:54:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>Tootin' Machine</h1><blockquote><p>Yeah, this batch has blueberries or strawberries, banana, cashew, beans, mushrooms, lettuce, some spinach, pure cherry juice - I think that's it</p></blockquote><p>This is a smoothie recipe.</p><h2>Ingredients</h2><ul><li>Blueberries / strawberries</li><li>Banana</li><li>Cashews</li><li>Beans</li><li>Mushrooms</li><li>Lettuce</li><li>Spinach</li><li>Pure cherry juice</li></ul><h2>Instructions</h2><p>Put it all in a blender and blend until smooth.</p><p>Amounts to come!</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/airports</guid>
			<title>On the Naming of Airport Terminal(s)</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/airports</link>
			<pubDate>Fri, 12 Jun 2020 19:58:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>On the Naming of Airport Terminal(s)</h1><p>I kinda want to be on an airport construction committee now.</p><p>I'd name each terminal after a city, so instead of "Terminal A" and "Terminal B", you'd have "Terminal Albuquerque" and "Terminal Boston"…</p><p>… so you would get things like "Welcome to Denver [terminal]! Your connecting flight leaves from Boston, and you'll need to go through Calvary on your way. Have a great day!"</p>]]></content:encoded>
		</item>
		<item>
			<guid isPermaLink="true">https://www.hawken.is/writing/2020/sql-case-expressions</guid>
			<title>SQL peculiarities in db2/AS400 (part 1)</title>
			<description></description>
			<link>https://www.hawken.is/writing/2020/sql-case-expressions</link>
			<pubDate>Fri, 12 Jun 2020 11:49:00 +0000</pubDate>
			<content:encoded><![CDATA[<h1>SQL peculiarities in db2/AS400 (part 1)</h1><p>SQL's <code>CASE</code> expression. Turns out that it's an expression, not a statement, so… it's supposed to only be allowed in expression contexts, IE the right-hand side of stuff.</p><pre><code class="language-SQL">WHERE 1 = CASE :student_id WHEN '123' THEN 1 ELSE 0 END
</code></pre><p>Postgres allows you to do something like the following:</p><pre><code class="language-SQL">WHERE CASE :student_id WHEN '123' THEN 1 = 1 ELSE 0 = 1 END
</code></pre><p>that is, the entire CASE can evaluate to a boolean value, not just a single value, which db2 requires.</p><p>TODO: document the occasional <code>CAST(? as varchar(100))</code> block required by db2.</p>]]></content:encoded>
		</item>
	</channel>
</rss>